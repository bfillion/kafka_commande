// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace kafka.commande.messages.Schemas
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class Event : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""Event"",""namespace"":""kafka.commande.messages.Schemas"",""fields"":[{""name"":""id"",""type"":""string""},{""name"":""date"",""type"":""string""},{""name"":""message"",""type"":{""type"":""record"",""name"":""Message"",""namespace"":""kafka.commande.messages.Schemas"",""fields"":[{""name"":""header"",""type"":{""type"":""record"",""name"":""Header"",""namespace"":""kafka.commande.messages.Schemas"",""fields"":[{""name"":""msg_id"",""type"":""string""},{""name"":""msg_date"",""type"":""string""}]}},{""name"":""Body"",""type"":""string""}]}}]}");
		private string _id;
		private string _date;
		private kafka.commande.messages.Schemas.Message _message;
		public virtual Schema Schema
		{
			get
			{
				return Event._SCHEMA;
			}
		}
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				this._date = value;
			}
		}
		public kafka.commande.messages.Schemas.Message message
		{
			get
			{
				return this._message;
			}
			set
			{
				this._message = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.date;
			case 2: return this.message;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.String)fieldValue; break;
			case 1: this.date = (System.String)fieldValue; break;
			case 2: this.message = (kafka.commande.messages.Schemas.Message)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
